clc; clear; % 초기화load HW5Data_1 data;  % HW5Data_1 data 로드X = data;figure(1);            % 창 생성(1)plot(X(:,1), X(:,2),'k*');  %  data 산점도 표시hold on;N = size(X,1);              % 전체 데이터 사이즈( 800)K = 2;                      % 군집화 개수 = 2m = zeros(K,2);             % 대표벡터 값Xlabel = zeros(N,1);        % 최초 라벨값i = 1;                      % 반복문 변수% K개 군집개수만큼 대표 벡터 선택while(i <= K)    t = floor(rand*N);      % 랜덤하게 데이터 선택    if((X(t,:) ~= m(1,:)) & (X(t,:) ~= m(2,:)))        m(i,:) = X(t,:);                            % 선택된 데이터를 대표벡터로 둠        plot(m(i,1), m(i,2),'rp', 'linewidth', 2);  % 선택된 대표벡터를 그림        i = i + 1;    end    legend('data', 'Initial Vector') % 범례 표시    title('Init')           % 그래프 제목 표시end cmode=['gd'; 'b*'; 'co'];  % 클러스터별로 표시 기호 설정% K-means 알고리즘 시작for iteration = 1:10       % 최대 10회 반복    figure(iteration+1);   % 반복단계 별로 별도의 그림으로 표현함    title(sprintf(('Step = %d'), iteration));  % 제목에 반복단계를 표현    hold on;               % 그래프 겹쳐 그리기 사용     for i=1:N              % 각 데이터를 가까운 클러스터에 할당        for j=1:K          % 군집 K개(2) 반복            d(j)=(X(i,:)-m(j,:))*(X(i,:)-m(j,:))';  % 대표벡터와 거리 계산        end                        [~, Xlabel(i)]=min(d);  % 가장 짧은거리 대표벡터로 라벨붙이기        plot(X(i,1), X(i,2), cmode(Xlabel(i),:));  % 라벨에 따라 다른 모양으로 표시    end      oldm = m;                   % 대표벡터를 다시 계산하기 위해 이전 단계의 대표벡터를 임시 저장함.    for i = 1:K                 % K개의 군집에 대해 계산        I = find(Xlabel==i);    % 각 라벨별로 모아 I로 저장        m(i,:) = mean(X(I,:));  % 라벨별로 모아진 I의 데이터 평균을 구함    end    for i = 1:K                                                % K개의 군집에 대해 수행        pv = plot(oldm(i,1), oldm(i,2),'mp', 'Linewidth', 2);  % 이전단계의 대표벡터        cv = plot(m(i,1), m(i,2),'rp', 'Linewidth', 2);        % 새로 수정한 대표벡터        legend([pv, cv], 'Previous Vector', 'Current Vector')  % 범례표시    end    %이전 평균값과 iteration 번째의 평균 값이 0.0001 보다 작으면 종료     if (sum(sum(sqrt((oldm-m).^2))) < 10^(-3)) break; endend