clc; clear                     % 초기화load HW5_Q2_1_result X1 X2 X3 X T;          % 문제 2-1 결과 X Y의 클래스별 분류 및 라벨 데이터 가져오기load HW5_Q2_2_result v v0 w w0 xd yd Ytst XYd;       % 문제 2-2 학습모델 및 결정경계 가져오기plot(X1(:,1), X1(:,2), 'ro');  % X1의 산점도를 그림(빨강 o)hold on;                       % 덮어쓰기plot(X2(:,1), X2(:,2), 'go');  % X2의 산점도를 그림(녹색 o)hold on;                       % 덮어쓰기plot(X3(:,1), X3(:,2), 'bo');  % X3의 산점도를 그림(파랑 o)grid on;contour(xd, yd, reshape(Ytst, size(xd))); % res 값을 기준으로 하여 (x,y) 평면상에 등고선을 그림    legend('C1', 'C2', 'C3');      % 범례 표시grid on; %데이터 1: 입력 (0, 0)  데이터 2: 입력 (3, 0) 데이터 3: 입력 (6, 0)  데이터 4: 입력 (3, 3)data_Test = [0 0; 3 0; 6 0; 3 3;];    % 테스트 데이터     plot(data_Test(:,1), data_Test(:,2), 'mp', 'Linewidth', 2)     % 입력 데이터 표시legend('C1', 'C2', 'C3','Decision', 'Input');            % 범례 작성for i=1:size(data_Test,1)          % meshgrid로 얻은 순서쌍에 대해 분류, 순서쌍의 수만큼 for문    x = data_Test(i,:);            % 테스트할 데이터(순서쌍 하나가 입력 하나임)        uh = x*w + w0;           % 은닉 뉴런의 가중합 계산    z = tanh(uh);            % 은닉노드의 출력값    uo = z*v + v0;           % 출력노드의 가중 합    y = tanh(uo);            % 활성화함수로 tanh 사용    [a, index] = max(y);    fprintf('%d (%d %d) = 출력뉴런 : Class-%d \n', i, data_Test(i,1), data_Test(i,2), index);end   % 모든 순서쌍에 대한 분류 끝